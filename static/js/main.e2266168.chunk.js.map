{"version":3,"sources":["components/card/card.js","components/card-list/card-list.component.js","components/search-box/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","card_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","search_SearchBox","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"wRAGaA,qBAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,YACJC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAG,IAA3C,4BACRR,EAAAC,EAAAC,cAAA,eAAOH,EAAMQ,QAAQE,KAArB,MACAT,EAAAC,EAAAC,cAAA,SAAIH,EAAMQ,QAAQG,UCJTC,EAAW,SAAAZ,GAAK,OACzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbJ,EAAMa,SAASC,IAAK,SAAAN,GAAO,OACrBP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAI,aAAaR,QAAUA,QCJhCS,SAAY,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,YAAaC,EAAfF,EAAeE,aAAf,OACrBnB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACTiB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCPG,cAlCb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAWJP,aAAe,SAACW,GACdP,EAAKQ,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAXnCX,EAAKY,MAAQ,CACXvB,SAAW,GACXoB,YAAa,IAJJT,mFAOM,IAAAa,EAAAV,KACjBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAACnB,SAAU6B,uCAMpC,IAAAC,EAC0BhB,KAAKS,MAA9BvB,EADD8B,EACC9B,SAAUoB,EADXU,EACWV,YACXW,EAAmB/B,EAASgC,OAAO,SAAArC,GAAO,OAC9CA,EAAQE,KAAKoC,cAAcC,SAASd,EAAYa,iBAElD,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAC6C,EAAD,CACH7B,YAAY,iBACZC,aAAcO,KAAKP,gBAGnBnB,EAAAC,EAAAC,cAAC8C,EAAD,CAAUpC,SAAY+B,YA9BVM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAvB,EAAA,GAAAQ,KAAAe,EAAAC,KAAA,UAAqBhB,KAAK,SAAArB,GAAiD,IAA9CsC,EAA8CtC,EAA9CsC,OAAQC,EAAsCvC,EAAtCuC,OAAQC,EAA8BxC,EAA9BwC,OAAQC,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,WAAP,KACEjE,EAAAC,EAAAC,cAACgE,EAAD,QAOJhB","file":"static/js/main.e2266168.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n    <img alt=\"my-friend\"\r\n         src={`https://robohash.org/${props.monster.id+343}?set=set2&size=180x180`}/>   \r\n    <h3>  {props.monster.name}  </h3>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n\r\n)\r\n\r\n","import React from \"react\";\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card'\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n    { props.monsters.map( monster => (\r\n            <Card key='monster.id' monster= {monster}>\r\n            </Card>\r\n            ))}\r\n    </div>\r\n\r\n)","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className=\"search\" \r\n            type=\"search\" \r\n            placeholder={placeholder} \r\n            onChange={handleChange}  />\r\n);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {CardList} from './components/card-list/card-list.component'\r\nimport {SearchBox} from './components/search-box/search';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      monsters : [],\r\n      searchField :''\r\n    };\r\n  }\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({monsters: users}));\r\n  }\r\nhandleChange = (e) => {\r\n  this.setState({searchField: e.target.value})\r\n}\r\n\r\nrender(){  \r\n  const {monsters, searchField} = this.state;\r\n  const filteredMonsters = monsters.filter(monster => \r\n    monster.name.toLowerCase().includes(searchField.toLowerCase()));\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Monster Rodolex</h1>\r\n      <p><SearchBox \r\n      placeholder='search friends'\r\n      handleChange={this.handleChange}\r\n      />\r\n      </p>\r\n      <CardList monsters = {filteredMonsters}/>\r\n    </div>\r\n    ); }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}